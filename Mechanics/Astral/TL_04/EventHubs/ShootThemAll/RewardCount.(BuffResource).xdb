<?xml version="1.0" encoding="UTF-8" ?>
<gameMechanics.constructor.schemes.buff.BuffResource>
	<Header>
		<resourceId>294538250</resourceId>
	</Header>
	<Name href="RewardCount.(BuffResource)_Name.txt" />
	<Description href="RewardCount.(BuffResource)_Desc.txt" />
	<image href="/Interface/Icons/Spells/ChampionsSpells/ChampionsVengeance.(UISingleTexture).xdb#xpointer(/UISingleTexture)" />
	<nameTemplate href="RewardCount.(BuffResource)_Name.txt.template" />
	<descTemplate href="RewardCount.(BuffResource)_Desc.txt.template" />
	<effects>
		<Item type="gameMechanics.elements.effects.EffectOnBuffTimeoutGeneric">
			<impacts>
				<Item type="gameMechanics.elements.impacts.ImpactIfTargetGeneric">
					<predicates>
						<Item type="gameMechanics.elements.predicates.PredicateBuffStackCountRange">
							<buff href="RewardCount.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
							<range>
								<min>20</min>
								<max>99</max>
							</range>
						</Item>
					</predicates>
					<impactsIf>
						<Item type="gameMechanics.elements.impacts.ImpactOnShipCrew">
							<impacts>
								<Item type="gameMechanics.elements.impacts.ImpactIfTargetGeneric">
									<predicates>
										<Item type="gameMechanics.constructor.basicElements.PredicateNot">
											<predicate type="gameMechanics.elements.predicates.PredicateBuffStackCountRange">
												<buff href="Rewarded.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
												<range>
													<min>1</min>
													<max>999</max>
												</range>
											</predicate>
										</Item>
									</predicates>
									<impactsIf>
										<Item type="gameMechanics.elements.impacts.ImpactIfTargetGeneric">
											<predicates>
												<Item type="gameMechanics.elements.predicates.PredicateInGroup" />
											</predicates>
											<impactsIf>
												<Item type="gameMechanics.elements.impacts.ImpactInstantiatingGeneric">
													<impacts>
														<Item type="gameMechanics.elements.impacts.ImpactAddAltCurrency">
															<currency href="/Mechanics/AlternativeCurrencies/AstralExplore.xdb#xpointer(/gameMechanics.constructor.schemes.item.AlternativeCurrency)" />
															<sumCalcer type="gameMechanics.elements.calcers.FloatData">
																<value>1</value>
															</sumCalcer>
														</Item>
														<Item type="gameMechanics.elements.impacts.ImpactAddMoneyGeneric">
															<sumCalcer type="gameMechanics.elements.calcers.LongData">
																<value>2000000</value>
															</sumCalcer>
														</Item>
													</impacts>
												</Item>
												<Item type="gameMechanics.elements.impacts.ImpactInstantiatingGeneric">
													<impacts>
														<Item type="gameMechanics.elements.impacts.ImpactsDeferredGeneric">
															<delay>1500</delay>
															<impacts>
																<Item type="gameMechanics.constructor.schemes.buff.BuffAttacherGeneric">
																	<buff href="Rewarded.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
																</Item>
															</impacts>
														</Item>
													</impacts>
												</Item>
											</impactsIf>
											<impactsElse>
												<Item type="gameMechanics.elements.impacts.ImpactInstantiatingGeneric">
													<impacts>
														<Item type="gameMechanics.elements.impacts.ImpactAddAltCurrency">
															<currency href="/Mechanics/AlternativeCurrencies/AstralExplore.xdb#xpointer(/gameMechanics.constructor.schemes.item.AlternativeCurrency)" />
															<sumCalcer type="gameMechanics.elements.calcers.FloatData">
																<value>1</value>
															</sumCalcer>
														</Item>
														<Item type="gameMechanics.elements.impacts.ImpactAddMoneyGeneric">
															<sumCalcer type="gameMechanics.elements.calcers.LongData">
																<value>3500000</value>
															</sumCalcer>
														</Item>
														<Item type="gameMechanics.constructor.schemes.buff.BuffAttacherGeneric">
															<buff href="Rewarded.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
														</Item>
													</impacts>
												</Item>
											</impactsElse>
										</Item>
									</impactsIf>
								</Item>
							</impacts>
						</Item>
					</impactsIf>
					<impactsElse>
						<Item type="gameMechanics.elements.impacts.ImpactOnShipCrew">
							<impacts>
								<Item type="gameMechanics.elements.impacts.ImpactIfTargetGeneric">
									<predicates>
										<Item type="gameMechanics.elements.predicates.PredicateBuffStackCountRange">
											<buff href="Rewarded.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
											<range>
												<min>1</min>
												<max>99</max>
											</range>
										</Item>
									</predicates>
									<impactsElse>
										<Item type="gameMechanics.elements.impacts.ImpactIfTargetGeneric">
											<predicates>
												<Item type="gameMechanics.elements.predicates.PredicateInGroup" />
											</predicates>
											<impactsIf>
												<Item type="gameMechanics.elements.impacts.ImpactAddMoneyGeneric">
													<sumCalcer type="gameMechanics.elements.calcers.CalcerLongMulFloat">
														<calcerLong type="gameMechanics.elements.calcers.LongData">
															<value>100000</value>
														</calcerLong>
														<calcerFloat type="gameMechanics.elements.calcers.BuffStackCountCalcer">
															<buff href="RewardCount.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
															<forAllRanks>false</forAllRanks>
														</calcerFloat>
													</sumCalcer>
												</Item>
												<Item type="gameMechanics.elements.impacts.ImpactInstantiatingGeneric">
													<impacts>
														<Item type="gameMechanics.elements.impacts.ImpactsDeferredGeneric">
															<delay>1500</delay>
															<impacts>
																<Item type="gameMechanics.constructor.schemes.buff.BuffAttacherGeneric">
																	<buff href="Rewarded.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
																</Item>
															</impacts>
														</Item>
													</impacts>
												</Item>
											</impactsIf>
											<impactsElse>
												<Item type="gameMechanics.elements.impacts.ImpactAddMoneyGeneric">
													<sumCalcer type="gameMechanics.elements.calcers.CalcerLongMulFloat">
														<calcerLong type="gameMechanics.elements.calcers.LongData">
															<value>170000</value>
														</calcerLong>
														<calcerFloat type="gameMechanics.elements.calcers.BuffStackCountCalcer">
															<buff href="RewardCount.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
															<forAllRanks>false</forAllRanks>
														</calcerFloat>
													</sumCalcer>
												</Item>
												<Item type="gameMechanics.elements.impacts.ImpactInstantiatingGeneric">
													<impacts>
														<Item type="gameMechanics.elements.impacts.ImpactsDeferredGeneric">
															<delay>1500</delay>
															<impacts>
																<Item type="gameMechanics.constructor.schemes.buff.BuffAttacherGeneric">
																	<buff href="Rewarded.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
																</Item>
															</impacts>
														</Item>
													</impacts>
												</Item>
											</impactsElse>
										</Item>
									</impactsElse>
								</Item>
							</impacts>
						</Item>
					</impactsElse>
				</Item>
			</impacts>
		</Item>
		<Item type="gameMechanics.elements.effects.EffectInstantiatingGeneric">
			<effects>
				<Item type="gameMechanics.world.ship.elements.EffectImpactsOnDeath">
					<impactsOnKiller>
						<Item type="gameMechanics.elements.impacts.ImpactIfCasterGeneric">
							<predicates>
								<Item type="gameMechanics.constructor.basicElements.PredicateNot">
									<predicate type="gameMechanics.elements.resources.ResourceBuff">
										<buff href="Victim.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									</predicate>
								</Item>
							</predicates>
							<impactsIf>
								<Item type="gameMechanics.elements.impacts.ImpactsIfGeneric">
									<predicate type="gameMechanics.elements.predicates.PredicateNotMaster" />
									<impactsIf>
										<Item type="gameMechanics.constructor.schemes.buff.BuffAttacherGeneric">
											<buff href="KillerCount.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
											<stacks type="gameMechanics.elements.calcers.BuffStackCountCalcer">
												<buff href="RewardCount.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
												<forAllRanks>true</forAllRanks>
											</stacks>
										</Item>
									</impactsIf>
								</Item>
							</impactsIf>
						</Item>
					</impactsOnKiller>
					<impactsOnVictimWoKiller>
						<Item type="gameMechanics.elements.impacts.ImpactsDeferredGeneric">
							<delay>1000</delay>
							<impacts>
								<Item type="gameMechanics.elements.impacts.BuffDetacherGeneric">
									<buff href="RewardCount.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
								</Item>
								<Item type="gameMechanics.constructor.schemes.buff.BuffAttacherGeneric">
									<buff href="Victim.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
								</Item>
							</impacts>
						</Item>
					</impactsOnVictimWoKiller>
					<impactsOnVictim>
						<Item type="gameMechanics.elements.impacts.ImpactsDeferredGeneric">
							<delay>1000</delay>
							<impacts>
								<Item type="gameMechanics.elements.impacts.BuffDetacherGeneric">
									<buff href="RewardCount.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
								</Item>
								<Item type="gameMechanics.constructor.schemes.buff.BuffAttacherGeneric">
									<buff href="Victim.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
								</Item>
							</impacts>
						</Item>
					</impactsOnVictim>
				</Item>
				<Item type="gameMechanics.elements.effects.EffectShipDieHardTrigger">
					<toKillerImpacts>
						<Item type="gameMechanics.elements.impacts.ImpactIfCasterGeneric">
							<predicates>
								<Item type="gameMechanics.constructor.basicElements.PredicateNot">
									<predicate type="gameMechanics.elements.resources.ResourceBuff">
										<buff href="Victim.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									</predicate>
								</Item>
							</predicates>
							<impactsIf>
								<Item type="gameMechanics.elements.impacts.ImpactsIfGeneric">
									<predicate type="gameMechanics.elements.predicates.PredicateNotMaster" />
									<impactsIf>
										<Item type="gameMechanics.constructor.schemes.buff.BuffAttacherGeneric">
											<buff href="KillerCount.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
											<stacks type="gameMechanics.elements.calcers.BuffStackCountCalcer">
												<buff href="RewardCount.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
												<forAllRanks>true</forAllRanks>
											</stacks>
										</Item>
									</impactsIf>
								</Item>
							</impactsIf>
						</Item>
					</toKillerImpacts>
					<toVictimImpacts>
						<Item type="gameMechanics.elements.impacts.ImpactsDeferredGeneric">
							<delay>1000</delay>
							<impacts>
								<Item type="gameMechanics.elements.impacts.BuffDetacherGeneric">
									<buff href="RewardCount.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
								</Item>
								<Item type="gameMechanics.constructor.schemes.buff.BuffAttacherGeneric">
									<buff href="Victim.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
								</Item>
							</impacts>
						</Item>
					</toVictimImpacts>
					<toVictimWoKillerImpacts>
						<Item type="gameMechanics.elements.impacts.ImpactsDeferredGeneric">
							<delay>1000</delay>
							<impacts>
								<Item type="gameMechanics.elements.impacts.BuffDetacherGeneric">
									<buff href="RewardCount.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
								</Item>
								<Item type="gameMechanics.constructor.schemes.buff.BuffAttacherGeneric">
									<buff href="Victim.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
								</Item>
							</impacts>
						</Item>
					</toVictimWoKillerImpacts>
				</Item>
			</effects>
		</Item>
	</effects>
	<duration>360000</duration>
	<stackLimit>20</stackLimit>
	<isHelpful>false</isHelpful>
	<decayPolicy>OfflineDecay</decayPolicy>
	<groups>
		<Item href="/Mechanics/Spells/Groups/DeathSafeBuff.xdb#xpointer(/gameMechanics.constructor.basicInterfaces.ActionGroup)" />
	</groups>
</gameMechanics.constructor.schemes.buff.BuffResource>
