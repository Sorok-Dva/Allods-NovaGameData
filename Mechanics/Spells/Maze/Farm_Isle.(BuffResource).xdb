<?xml version="1.0" encoding="UTF-8" ?>
<gameMechanics.constructor.schemes.buff.BuffResource>
	<Header>
		<resourceId>216324118</resourceId>
	</Header>
	<Name href="Farm_Isle.txt" />
	<Description href="Farm_Isle.Description.txt" />
	<image href="/Interface/Icons/Spells/ChampionsSpells/ChampionsBanner.(UISingleTexture).xdb#xpointer(/UISingleTexture)" />
	<visScript href="Farm_Isle_PostEffect.(BuffVisScripts).xdb#xpointer(/BuffVisScripts)" />
	<effects>
		<Item type="gameMechanics.elements.effects.DeathTrigger">
			<killerImpacts>
				<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
					<predicates>
						<Item type="gameMechanics.elements.resources.ResourceBuff">
							<buff href="Frag.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
						</Item>
					</predicates>
					<impactsIf>
						<Item type="gameMechanics.constructor.schemes.buff.StackBuff">
							<buff href="Frag.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
							<delta type="gameMechanics.elements.calcers.FloatData">
								<value>-1</value>
							</delta>
						</Item>
					</impactsIf>
				</Item>
				<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
					<predicates>
						<Item type="gameMechanics.elements.resources.ResourceBuff">
							<buff href="Punish.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
						</Item>
					</predicates>
					<impactsIf>
						<Item type="gameMechanics.constructor.schemes.buff.StackBuff">
							<buff href="Punish.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
							<delta type="gameMechanics.elements.calcers.FloatData">
								<value>1</value>
							</delta>
						</Item>
					</impactsIf>
				</Item>
				<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
					<predicates>
						<Item type="gameMechanics.constructor.basicElements.PredicateAnd">
							<predicates>
								<Item type="gameMechanics.constructor.basicElements.PredicateNot">
									<predicate type="gameMechanics.elements.resources.ResourceBuff">
										<buff href="Frag.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									</predicate>
								</Item>
								<Item type="gameMechanics.constructor.basicElements.PredicateNot">
									<predicate type="gameMechanics.elements.resources.ResourceBuff">
										<buff href="Punish.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									</predicate>
								</Item>
							</predicates>
						</Item>
					</predicates>
					<impactsIf>
						<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
							<buff href="Punish.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
						</Item>
					</impactsIf>
				</Item>
			</killerImpacts>
			<impactsToKiller>
				<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
					<predicates>
						<Item type="gameMechanics.elements.resources.ResourceBuff">
							<buff href="Frag.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
						</Item>
					</predicates>
					<impactsIf>
						<Item type="gameMechanics.constructor.schemes.buff.StackBuff">
							<buff href="Frag.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
							<delta type="gameMechanics.elements.calcers.FloatData">
								<value>1</value>
							</delta>
						</Item>
					</impactsIf>
				</Item>
				<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
					<predicates>
						<Item type="gameMechanics.constructor.basicElements.PredicateAnd">
							<predicates>
								<Item type="gameMechanics.constructor.basicElements.PredicateNot">
									<predicate type="gameMechanics.elements.resources.ResourceBuff">
										<buff href="Frag.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									</predicate>
								</Item>
								<Item type="gameMechanics.constructor.basicElements.PredicateNot">
									<predicate type="gameMechanics.elements.resources.ResourceBuff">
										<buff href="Punish.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									</predicate>
								</Item>
							</predicates>
						</Item>
					</predicates>
					<impactsIf>
						<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
							<buff href="Frag.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
						</Item>
					</impactsIf>
				</Item>
				<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
					<predicates>
						<Item type="gameMechanics.elements.resources.ResourceBuff">
							<buff href="Punish.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
						</Item>
					</predicates>
					<impactsIf>
						<Item type="gameMechanics.constructor.schemes.buff.StackBuff">
							<buff href="Punish.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
							<delta type="gameMechanics.elements.calcers.FloatData">
								<value>-1</value>
							</delta>
						</Item>
					</impactsIf>
				</Item>
			</impactsToKiller>
			<skipSelfKill>true</skipSelfKill>
		</Item>
		<Item type="gameMechanics.elements.effects.ImpactsOverTime">
			<impacts>
				<Item type="gameMechanics.elements.impacts.ImpactInstantiating">
					<impacts>
						<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
							<predicates>
								<Item type="gameMechanics.constructor.basicElements.PredicateAnd">
									<predicates>
										<Item type="gameMechanics.constructor.basicElements.PredicateNot">
											<predicate type="gameMechanics.elements.predicates.PredicateInZone">
												<zone href="/Maps/Maze_KHD/Zones/Maze_KHD/Maze_KHD.(ZoneResource).xdb#xpointer(/gameMechanics.map.zone.ZoneResource)" />
											</predicate>
										</Item>
										<Item type="gameMechanics.constructor.basicElements.PredicateNot">
											<predicate type="gameMechanics.elements.predicates.PredicateInZone">
												<zone href="/Maps/DeathRealm/Zones/DeathRealm.(ZoneResource).xdb#xpointer(/gameMechanics.map.zone.ZoneResource)" />
											</predicate>
										</Item>
									</predicates>
								</Item>
							</predicates>
							<impactsIf>
								<Item type="gameMechanics.elements.impacts.BuffDetacher">
									<buff href="Farm_Isle.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									<anyRank>false</anyRank>
								</Item>
								<Item type="gameMechanics.elements.impacts.BuffDetacher">
									<buff href="Punish.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									<anyRank>false</anyRank>
								</Item>
								<Item type="gameMechanics.elements.impacts.BuffDetacher">
									<buff href="Frag.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									<anyRank>false</anyRank>
								</Item>
							</impactsIf>
						</Item>
					</impacts>
				</Item>
			</impacts>
			<tick>60000</tick>
		</Item>
	</effects>
	<duration>1000</duration>
	<isStackable>false</isStackable>
	<isHelpful>true</isHelpful>
	<groups>
		<Item href="/Mechanics/Spells/Groups/Maze.(ActionGroup).xdb#xpointer(/gameMechanics.constructor.basicInterfaces.ActionGroup)" />
		<Item href="/Mechanics/Spells/Groups/DeathSafeBuff.xdb#xpointer(/gameMechanics.constructor.basicInterfaces.ActionGroup)" />
	</groups>
	<canBeSaved>false</canBeSaved>
</gameMechanics.constructor.schemes.buff.BuffResource>
