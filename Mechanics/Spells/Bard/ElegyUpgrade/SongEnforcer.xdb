<?xml version="1.0" encoding="UTF-8" ?>
<gameMechanics.constructor.schemes.buff.BuffResource>
	<Header>
		<resourceId>367287305</resourceId>
	</Header>
	<needVisualize>false</needVisualize>
	<needVisualizeDuration>false</needVisualizeDuration>
	<effects>
		<Item type="gameMechanics.elements.effects.Switch">
			<impactsOn>
				<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
					<predicates>
						<Item type="gameMechanics.elements.predicates.PredicateHasSpell">
							<spell href="Spell03.xdb#xpointer(/gameMechanics.constructor.schemes.spell.casterSelf.SpellCasterSelf)" />
							<anyRank>false</anyRank>
						</Item>
					</predicates>
					<impactsIf>
						<Item type="gameMechanics.constructor.basicElements.ImpactList">
							<impactsResource href="SongOn_03.(ImpactList).xdb#xpointer(/gameMechanics.constructor.newBasicElements.ImpactListGenericResource)" />
						</Item>
					</impactsIf>
					<impactsElse>
						<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
							<predicates>
								<Item type="gameMechanics.elements.predicates.PredicateHasSpell">
									<spell href="Spell02.xdb#xpointer(/gameMechanics.constructor.schemes.spell.casterSelf.SpellCasterSelf)" />
									<anyRank>false</anyRank>
								</Item>
							</predicates>
							<impactsIf>
								<Item type="gameMechanics.constructor.basicElements.ImpactList">
									<impactsResource href="SongOn_02.(ImpactList).xdb#xpointer(/gameMechanics.constructor.newBasicElements.ImpactListGenericResource)" />
								</Item>
							</impactsIf>
							<impactsElse>
								<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
									<predicates>
										<Item type="gameMechanics.elements.predicates.PredicateHasSpell">
											<spell href="Spell01.xdb#xpointer(/gameMechanics.constructor.schemes.spell.casterSelf.SpellCasterSelf)" />
											<anyRank>false</anyRank>
										</Item>
									</predicates>
									<impactsIf>
										<Item type="gameMechanics.constructor.basicElements.ImpactList">
											<impactsResource href="SongOn_01.(ImpactList).xdb#xpointer(/gameMechanics.constructor.newBasicElements.ImpactListGenericResource)" />
										</Item>
									</impactsIf>
									<impactsElse>
										<Item type="gameMechanics.elements.impacts.BuffDetacher">
											<buff href="SongEnforcer.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
										</Item>
									</impactsElse>
								</Item>
							</impactsElse>
						</Item>
					</impactsElse>
				</Item>
			</impactsOn>
			<impactsOff>
				<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
					<predicates>
						<Item type="gameMechanics.elements.resources.ResourceBuff">
							<buff href="/Mechanics/Spells/Bard/QuickSong/DetacherFailsafeElegyUpgrade.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
						</Item>
					</predicates>
					<impactsIf>
						<Item type="gameMechanics.elements.impacts.BuffDetacher">
							<buff href="/Mechanics/Spells/Bard/QuickSong/DetacherFailsafeElegyUpgrade.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
						</Item>
					</impactsIf>
				</Item>
			</impactsOff>
			<rerunOnLoad>true</rerunOnLoad>
		</Item>
		<Item type="gameMechanics.elements.effects.ForgetSpellTrigger">
			<spell href="Spell01.xdb#xpointer(/gameMechanics.constructor.schemes.spell.casterSelf.SpellCasterSelf)" />
			<impacts>
				<Item type="gameMechanics.elements.impacts.PostponedImpacts">
					<impacts>
						<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
							<predicates>
								<Item type="gameMechanics.elements.predicates.PredicateHasSpell">
									<spell href="Spell03.xdb#xpointer(/gameMechanics.constructor.schemes.spell.casterSelf.SpellCasterSelf)" />
									<anyRank>false</anyRank>
								</Item>
							</predicates>
							<impactsIf>
								<Item type="gameMechanics.constructor.basicElements.ImpactList">
									<impactsResource href="SongOn_03.(ImpactList).xdb#xpointer(/gameMechanics.constructor.newBasicElements.ImpactListGenericResource)" />
								</Item>
							</impactsIf>
							<impactsElse>
								<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
									<predicates>
										<Item type="gameMechanics.elements.predicates.PredicateHasSpell">
											<spell href="Spell02.xdb#xpointer(/gameMechanics.constructor.schemes.spell.casterSelf.SpellCasterSelf)" />
											<anyRank>false</anyRank>
										</Item>
									</predicates>
									<impactsIf>
										<Item type="gameMechanics.constructor.basicElements.ImpactList">
											<impactsResource href="SongOn_02.(ImpactList).xdb#xpointer(/gameMechanics.constructor.newBasicElements.ImpactListGenericResource)" />
										</Item>
									</impactsIf>
									<impactsElse>
										<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
											<predicates>
												<Item type="gameMechanics.elements.predicates.PredicateHasSpell">
													<spell href="Spell01.xdb#xpointer(/gameMechanics.constructor.schemes.spell.casterSelf.SpellCasterSelf)" />
													<anyRank>false</anyRank>
												</Item>
											</predicates>
											<impactsIf>
												<Item type="gameMechanics.constructor.basicElements.ImpactList">
													<impactsResource href="SongOn_01.(ImpactList).xdb#xpointer(/gameMechanics.constructor.newBasicElements.ImpactListGenericResource)" />
												</Item>
											</impactsIf>
											<impactsElse>
												<Item type="gameMechanics.elements.impacts.BuffDetacher">
													<buff href="SongEnforcer.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
												</Item>
											</impactsElse>
										</Item>
									</impactsElse>
								</Item>
							</impactsElse>
						</Item>
					</impacts>
				</Item>
			</impacts>
		</Item>
	</effects>
	<isStackable>true</isStackable>
	<stackLimit>1</stackLimit>
	<isGradual>false</isGradual>
	<isHelpful>true</isHelpful>
	<groups>
		<Item href="/Mechanics/Spells/Groups/DeathSafeBuff.xdb#xpointer(/gameMechanics.constructor.basicInterfaces.ActionGroup)" />
	</groups>
	<isDetachableOnWill>false</isDetachableOnWill>
	<isMultiple>false</isMultiple>
	<canBeSaved>true</canBeSaved>
	<isClientReplicated>false</isClientReplicated>
	<resistType>SRT_BuffDebuff</resistType>
</gameMechanics.constructor.schemes.buff.BuffResource>
