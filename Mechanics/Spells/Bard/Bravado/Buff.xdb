<?xml version="1.0" encoding="UTF-8" ?>
<gameMechanics.constructor.schemes.buff.BuffResource>
	<Header>
		<resourceId>279394329</resourceId>
		<isPrototype>true</isPrototype>
	</Header>
	<image href="/Interface/Icons/Spells/Bard/Bravado.(UISingleTexture).xdb#xpointer(/UISingleTexture)" />
	<visScript href="/Spells/VisScripts/Bard/Bravado_Buff.(BuffVisScripts).xdb#xpointer(/BuffVisScripts)" />
	<needVisualize>false</needVisualize>
	<needVisualizeDuration>false</needVisualizeDuration>
	<nameTemplate href="Buff_Name.txt.template" />
	<descTemplate href="Buff_Desc.txt.template" />
	<effects>
		<Item type="gameMechanics.elements.effects.EffectIfOverTime">
			<impactsIf>
				<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
					<predicates>
						<Item type="gameMechanics.constructor.basicElements.PredicateNot">
							<hideText>false</hideText>
							<predicate type="gameMechanics.elements.predicates.PredicateHasBuffFromGroup">
								<hideText>false</hideText>
								<groups>
									<Item href="/Mechanics/Spells/Groups/StopSing.xdb#xpointer(/gameMechanics.constructor.basicInterfaces.ActionGroup)" />
								</groups>
								<checkHelpful>true</checkHelpful>
								<checkHarmful>true</checkHarmful>
							</predicate>
						</Item>
					</predicates>
					<impactsIf>
						<Item type="gameMechanics.elements.impacts.ImpactCreaturesAround">
							<radius>20</radius>
							<affectGroup>Group</affectGroup>
							<affectHolder>true</affectHolder>
							<impacts>
								<Item type="gameMechanics.elements.impacts.ImpactsIf">
									<predicate type="gameMechanics.constructor.basicElements.BinaryPredicateAnd">
										<hideText>false</hideText>
										<predicates>
											<Item type="gameMechanics.constructor.basicElements.BinaryPredicateWrapper">
												<hideText>false</hideText>
												<onSlave type="gameMechanics.elements.resources.ResourceBuff">
													<hideText>false</hideText>
													<buff href="Buff_02_01.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
													<anyRank>true</anyRank>
													<consumeStacks>0</consumeStacks>
												</onSlave>
											</Item>
											<Item type="gameMechanics.constructor.basicElements.BinaryPredicateNot">
												<hideText>false</hideText>
												<predicate type="gameMechanics.elements.predicates.PredicateHasBuffFromMaster">
													<hideText>false</hideText>
													<buff href="Buff_02_01.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
													<anyRank>true</anyRank>
												</predicate>
											</Item>
										</predicates>
									</predicate>
									<impactsIf>
										<Item type="gameMechanics.constructor.schemes.buff.StackBuff">
											<buff href="Buff_02_01.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
											<anyRank>true</anyRank>
											<delta type="gameMechanics.elements.calcers.FloatData">
												<value>0</value>
											</delta>
											<attachIfNotExist>false</attachIfNotExist>
											<resetTimer>true</resetTimer>
										</Item>
									</impactsIf>
									<impactsElse>
										<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
											<buff hrefvar="buff" />
											<allowOverrideCaster>false</allowOverrideCaster>
										</Item>
									</impactsElse>
								</Item>
							</impacts>
							<filter type="gameMechanics.constructor.basicElements.FilterAnd">
								<filters>
									<Item type="gameMechanics.world.creature.AliveFilter">
										<alowImmortal>true</alowImmortal>
									</Item>
									<Item type="gameMechanics.constructor.basicElements.FilterPredicates">
										<predicates>
											<Item type="gameMechanics.constructor.basicElements.PredicateNot">
												<hideText>false</hideText>
												<predicate type="gameMechanics.elements.resources.ResourceBuff">
													<hideText>false</hideText>
													<buff href="Buff_04_01.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
													<anyRank>true</anyRank>
													<consumeStacks>0</consumeStacks>
												</predicate>
											</Item>
										</predicates>
									</Item>
								</filters>
							</filter>
							<targetsLimit>0</targetsLimit>
							<onBehalfOfHolder>true</onBehalfOfHolder>
						</Item>
					</impactsIf>
				</Item>
			</impactsIf>
			<runImpactsOnEachTick>true</runImpactsOnEachTick>
			<affectOnStartTick>false</affectOnStartTick>
			<tick type="gameMechanics.elements.calcers.CalcerMul">
				<calcers>
					<Item type="gameMechanics.elements.calcers.CalcerSum">
						<summands>
							<Item type="gameMechanics.elements.calcers.FloatData">
								<value>5000</value>
							</Item>
							<Item type="gameMechanics.elements.calcers.AbilityRankCalcer">
								<ability href="/Mechanics/Spells/Bard/Abilities/BravadoLamentQuickTicks/Ability01.xdb#xpointer(/gameMechanics.constructor.schemes.ability.AbilityResource)" />
								<mul>-833</mul>
								<sum>-1</sum>
							</Item>
						</summands>
					</Item>
					<Item type="gameMechanics.elements.calcers.CalcerIf">
						<predicate type="gameMechanics.elements.resources.ResourceBuff">
							<hideText>false</hideText>
							<buff href="/Mechanics/Spells/Bard/QuickSong/Buff01.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
							<anyRank>true</anyRank>
							<consumeStacks>0</consumeStacks>
						</predicate>
						<calcerIf type="gameMechanics.elements.calcers.LinearCalcer">
							<mul>-1</mul>
							<mulCalcer type="gameMechanics.constructor.basicElements.ScalerCalcer">
								<scaler type="gameMechanics.elements.scalers.BuffRankScaler">
									<buff href="/Mechanics/Spells/Bard/QuickSong/Buff01.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									<mul>1</mul>
									<checkCaster>false</checkCaster>
								</scaler>
								<value>1</value>
							</mulCalcer>
							<sum>5</sum>
						</calcerIf>
						<calcerElse type="gameMechanics.elements.calcers.FloatData">
							<value>1</value>
						</calcerElse>
					</Item>
				</calcers>
			</tick>
		</Item>
	</effects>
	<duration>0</duration>
	<isStackable>false</isStackable>
	<stackLimit>1</stackLimit>
	<isGradual>false</isGradual>
	<isHelpful>true</isHelpful>
	<isDetachableOnWill>false</isDetachableOnWill>
	<isMultiple>false</isMultiple>
	<ranks>
		<Item href="Buff01.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
		<Item href="Buff02.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
		<Item href="Buff03.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
	</ranks>
	<canBeSaved>false</canBeSaved>
	<isClientReplicated>true</isClientReplicated>
	<resistType>SRT_BuffDebuff</resistType>
</gameMechanics.constructor.schemes.buff.BuffResource>
