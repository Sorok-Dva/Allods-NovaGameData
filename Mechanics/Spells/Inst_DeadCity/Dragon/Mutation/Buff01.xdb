<?xml version="1.0" encoding="UTF-8" ?>
<gameMechanics.constructor.schemes.buff.BuffResource>
	<Header>
		<resourceId>130239522</resourceId>
	</Header>
	<Name href="Buff_Name.txt" />
	<Description href="Buff_Desc.txt" />
	<image href="/Interface/Icons/Spells/Mage/MageFireInstability.(UISingleTexture).xdb#xpointer(/UISingleTexture)" />
	<visualEffects>
		<Item>
			<effectFx href="/Spells/FX/Mobs/DC_Dragon_Mutation_Buff.(VisObjectTemplate).xdb#xpointer(/VisObjectTemplate)" />
		</Item>
	</visualEffects>
	<nameTemplate href="Buff_Name.txt" />
	<descTemplate href="Buff_Desc.txt" />
	<effects>
		<Item type="gameMechanics.elements.effects.ImpactsOverTime">
			<impacts>
				<Item type="gameMechanics.elements.impacts.ImpactCreaturesAround">
					<radius>6</radius>
					<impacts>
						<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
							<predicates>
								<Item type="gameMechanics.constructor.basicElements.PredicateAnd">
									<predicates>
										<Item type="gameMechanics.constructor.basicElements.PredicateNot">
											<predicate type="gameMechanics.elements.predicates.PredicateMobWorld">
												<mobs>
													<Item href="/Creatures/Dragon/Inst_DeadCity/Instances/Inst_DeadCity/DragonHandLeft.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
													<Item href="/Creatures/Dragon/Inst_DeadCity/Instances/Inst_DeadCity/DragonHandRight.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
												</mobs>
											</predicate>
										</Item>
										<Item type="gameMechanics.constructor.basicElements.PredicateNot">
											<predicate type="gameMechanics.elements.predicates.PredicateMobWorld">
												<mobs>
													<Item href="/Creatures/DraconidMage/Instances/Inst_DeadCity/DraconidMageAdd.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
													<Item href="/Creatures/DraconidPriest/Instances/Inst_DeadCity/DraconidPriestAdd.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
													<Item href="/Creatures/DraconidWarrior/Instances/Inst_DeadCity/DraconidWarriorAdd.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
													<Item href="/Creatures/DraconidMage/Instances/Inst_DeadCity/DraconidMageSkeletonAdd.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
													<Item href="/Creatures/DraconidPriest/Instances/Inst_DeadCity/DraconidPriestSkeletonAdd.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
													<Item href="/Creatures/DraconidWarrior/Instances/Inst_DeadCity/DraconidWarriorSkeletonAdd.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
												</mobs>
											</predicate>
										</Item>
									</predicates>
								</Item>
							</predicates>
							<impactsIf>
								<Item type="gameMechanics.elements.impacts.ScaledMagicDamage">
									<element>FIRE</element>
									<threatMultiplier>0.01</threatMultiplier>
									<statsConvertor>
										<intuition type="gameMechanics.elements.calcers.CalcerIf">
											<predicate type="gameMechanics.elements.predicates.PredicateManaCaster">
												<manaType>Mana</manaType>
											</predicate>
											<calcerIf type="gameMechanics.elements.calcers.InnateStatCalcer">
												<stat>IS_Intuition</stat>
											</calcerIf>
											<calcerElse type="gameMechanics.elements.calcers.InnateStatCalcer">
												<stat>IS_Dexterity</stat>
											</calcerElse>
										</intuition>
										<spirit type="gameMechanics.elements.calcers.CalcerIf">
											<predicate type="gameMechanics.elements.predicates.PredicateManaCaster">
												<manaType>Mana</manaType>
											</predicate>
											<calcerIf type="gameMechanics.elements.calcers.InnateStatCalcer">
												<stat>IS_Spirit</stat>
											</calcerIf>
											<calcerElse type="gameMechanics.elements.calcers.InnateStatCalcer">
												<stat>IS_Might</stat>
											</calcerElse>
										</spirit>
									</statsConvertor>
									<minDamage>10000</minDamage>
									<maxDamage>12000</maxDamage>
									<scaler type="gameMechanics.elements.scalers.TrivialScaler" />
								</Item>
							</impactsIf>
							<impactsElse>
								<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
									<predicates>
										<Item type="gameMechanics.elements.predicates.PredicateMobWorld">
											<mobs>
												<Item href="/Creatures/DraconidMage/Instances/Inst_DeadCity/DraconidMageAdd.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
												<Item href="/Creatures/DraconidPriest/Instances/Inst_DeadCity/DraconidPriestAdd.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
												<Item href="/Creatures/DraconidWarrior/Instances/Inst_DeadCity/DraconidWarriorAdd.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
												<Item href="/Creatures/DraconidMage/Instances/Inst_DeadCity/DraconidMageSkeletonAdd.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
												<Item href="/Creatures/DraconidPriest/Instances/Inst_DeadCity/DraconidPriestSkeletonAdd.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
												<Item href="/Creatures/DraconidWarrior/Instances/Inst_DeadCity/DraconidWarriorSkeletonAdd.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
											</mobs>
										</Item>
									</predicates>
									<impactsIf>
										<Item type="gameMechanics.elements.impacts.ScaledMagicDamage">
											<element>FIRE</element>
											<threatMultiplier>0.01</threatMultiplier>
											<statsConvertor>
												<intuition type="gameMechanics.elements.calcers.CalcerIf">
													<predicate type="gameMechanics.elements.predicates.PredicateManaCaster">
														<manaType>Mana</manaType>
													</predicate>
													<calcerIf type="gameMechanics.elements.calcers.InnateStatCalcer">
														<stat>IS_Intuition</stat>
													</calcerIf>
													<calcerElse type="gameMechanics.elements.calcers.InnateStatCalcer">
														<stat>IS_Dexterity</stat>
													</calcerElse>
												</intuition>
												<spirit type="gameMechanics.elements.calcers.CalcerIf">
													<predicate type="gameMechanics.elements.predicates.PredicateManaCaster">
														<manaType>Mana</manaType>
													</predicate>
													<calcerIf type="gameMechanics.elements.calcers.InnateStatCalcer">
														<stat>IS_Spirit</stat>
													</calcerIf>
													<calcerElse type="gameMechanics.elements.calcers.InnateStatCalcer">
														<stat>IS_Might</stat>
													</calcerElse>
												</spirit>
											</statsConvertor>
											<minDamage>48000</minDamage>
											<maxDamage>54000</maxDamage>
											<scaler type="gameMechanics.elements.scalers.TrivialScaler" />
										</Item>
									</impactsIf>
								</Item>
							</impactsElse>
						</Item>
					</impacts>
					<filter type="gameMechanics.constructor.basicElements.TrueFilter" />
				</Item>
			</impacts>
			<tick>1000</tick>
		</Item>
	</effects>
	<duration>60000</duration>
	<isStackable>false</isStackable>
	<isHelpful>false</isHelpful>
	<canBeSaved>false</canBeSaved>
	<resistType>SRT_None</resistType>
	<isAE>true</isAE>
</gameMechanics.constructor.schemes.buff.BuffResource>
