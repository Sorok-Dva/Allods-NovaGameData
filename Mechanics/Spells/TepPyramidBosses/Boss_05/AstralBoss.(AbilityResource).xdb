<?xml version="1.0" encoding="UTF-8" ?>
<gameMechanics.constructor.schemes.ability.AbilityResource>
	<Header>
		<resourceId>281975810</resourceId>
	</Header>
	<name href="AstralBoss.(AbilityResource)_Name.txt" />
	<nameTemplate href="AstralBoss.(AbilityResource)_Name.txt.template" />
	<effects>
		<Item type="gameMechanics.elements.effects.EffectDisableAct">
			<actions>
				<Item>Move</Item>
				<Item>Rotate</Item>
				<Item>Jump</Item>
			</actions>
		</Item>
		<Item type="gameMechanics.elements.effects.CombatStateTrigger">
			<onEnter>
				<Item type="gameMechanics.elements.impacts.ImpactCreaturesAround">
					<impacts>
						<Item type="gameMechanics.elements.impacts.ReturningInstantiatingImpact">
							<impacts>
								<Item type="gameMechanics.elements.impacts.ForceAggro" />
							</impacts>
						</Item>
					</impacts>
					<impactsOnNoTargets>
						<Item type="gameMechanics.constructor.basicElements.ImpactNull" />
					</impactsOnNoTargets>
					<filter type="gameMechanics.world.creature.AvatarFilter" />
				</Item>
			</onEnter>
		</Item>
		<Item type="gameMechanics.elements.effects.EffectDisableEvadeTimeout" />
		<Item type="gameMechanics.elements.effects.EffectDisableAbility">
			<ability href="/Mechanics/Abilities/Bosses/ActivityTracker/Ability01.xdb#xpointer(/gameMechanics.constructor.schemes.ability.AbilityResource)" />
		</Item>
		<Item type="gameMechanics.elements.effects.AddVisibilityRule">
			<visibilityRule>
				<channel>Influence</channel>
				<vector>Outgoing</vector>
				<direction>Incoming</direction>
				<plane href="/Mechanics/Creatures/TepPyramidBosses/Boss_05/Corpse.(Plane).xdb#xpointer(/gameMechanics.world.visibility.Plane)" />
			</visibilityRule>
		</Item>
		<Item type="gameMechanics.elements.effects.AddVisibilityRule">
			<visibilityRule>
				<channel>Select</channel>
				<vector>Outgoing</vector>
				<direction>Incoming</direction>
				<plane href="/Mechanics/Creatures/TepPyramidBosses/Boss_05/Corpse.(Plane).xdb#xpointer(/gameMechanics.world.visibility.Plane)" />
			</visibilityRule>
		</Item>
		<Item type="gameMechanics.elements.effects.EffectInstantiating">
			<effects>
				<Item type="gameMechanics.elements.effects.Switch">
					<impactsOn>
						<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
							<buff href="TepHighlander.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
						</Item>
						<Item type="gameMechanics.map.variables.ImpactIfMapVariable">
							<variable href="/Maps/Inst_TepPyramid/Scripts/TepStart.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
							<predicates>
								<Item type="gameMechanics.map.variables.PredicateMapVariableEqualsGeneric">
									<variableResource href="/Maps/Inst_TepPyramid/Scripts/TepStart.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
									<expectedValue type="gameMechanics.elements.calcers.FloatData">
										<value>0</value>
									</expectedValue>
								</Item>
							</predicates>
							<impactsIf>
								<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
									<buff href="TepAstralStarting.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									<durationScaler type="gameMechanics.elements.scalers.LinearScaler">
										<multiplier>56</multiplier>
									</durationScaler>
								</Item>
								<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
									<buff href="TepPhysSummon.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
								</Item>
								<Item type="gameMechanics.map.variables.ImpactMapVariableSummand">
									<variable href="/Maps/Inst_TepPyramid/Scripts/TepStart.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
									<summand>1</summand>
								</Item>
							</impactsIf>
						</Item>
					</impactsOn>
				</Item>
			</effects>
		</Item>
		<Item type="gameMechanics.elements.effects.AutoAttackDisabler" />
		<Item type="gameMechanics.elements.effects.EffectInstantiating">
			<effects>
				<Item type="gameMechanics.elements.effects.ImpactsOverTime">
					<impacts>
						<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
							<predicates>
								<Item type="gameMechanics.constructor.basicElements.PredicateAnd">
									<predicates>
										<Item type="gameMechanics.elements.predicates.PredicateHealthLower">
											<level>0.99</level>
										</Item>
										<Item type="gameMechanics.constructor.basicElements.PredicateNot">
											<predicate type="gameMechanics.elements.resources.ResourceBuff">
												<buff href="PhysTepDead.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
											</predicate>
										</Item>
									</predicates>
								</Item>
							</predicates>
							<impactsIf>
								<Item type="gameMechanics.elements.impacts.ImpactHeal">
									<heal>1</heal>
									<scaler type="gameMechanics.elements.scalers.TrivialScaler" />
									<scalerTarget type="gameMechanics.elements.scalers.LinerMultiplierScaler">
										<mulCalcer type="gameMechanics.elements.calcers.FullHealthCalcer">
											<multiplier>0.01</multiplier>
										</mulCalcer>
									</scalerTarget>
									<mode>Direct</mode>
									<considerOutgoingModifiers>false</considerOutgoingModifiers>
								</Item>
								<Item type="gameMechanics.elements.impacts.ImpactFindSpawnTable">
									<impacts>
										<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
											<buff href="Phys_Buff_01.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
										</Item>
										<Item type="gameMechanics.elements.impacts.DirectDamage">
											<damage>1</damage>
											<scaler type="gameMechanics.elements.scalers.TrivialScaler" />
											<scalerTarget type="gameMechanics.elements.scalers.LinerMultiplierScaler">
												<mulCalcer type="gameMechanics.elements.calcers.FullHealthCalcer">
													<multiplier>0.01</multiplier>
												</mulCalcer>
											</scalerTarget>
										</Item>
									</impacts>
									<spawnResource href="/Maps/Inst_TepPyramid/SpawnTables/Inst_TepPyramid/TepPhysPatrol.(SpawnTable).xdb#xpointer(/gameMechanics.map.spawn.SpawnTable)" />
								</Item>
								<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
									<buff href="Astral_Buff_01.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
								</Item>
							</impactsIf>
						</Item>
					</impacts>
					<tick>1000</tick>
				</Item>
			</effects>
		</Item>
		<Item type="gameMechanics.elements.effects.DeathTrigger">
			<impacts>
				<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
					<buff href="TepDeath.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
				</Item>
				<Item type="gameMechanics.constructor.basicElements.ImpactAdapter">
					<impacts>
						<Item type="gameMechanics.elements.impacts.ImpactsToSummonPoolGeneric">
							<pool href="TepPool.(SummonPool).xdb#xpointer(/gameMechanics.map.spawn.SummonPool)" />
							<impacts>
								<Item type="gameMechanics.constructor.schemes.buff.BuffAttacherGeneric">
									<buff href="TepCorpseNoCast.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
								</Item>
							</impacts>
						</Item>
					</impacts>
				</Item>
				<Item type="gameMechanics.elements.impacts.ImpactCreaturesAround">
					<impacts>
						<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
							<buff href="VeronicaStun.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
						</Item>
					</impacts>
					<impactsOnNoTargets>
						<Item type="gameMechanics.constructor.basicElements.ImpactNull" />
					</impactsOnNoTargets>
					<filter type="gameMechanics.world.creature.AvatarFilter">
						<withPet>true</withPet>
					</filter>
				</Item>
			</impacts>
		</Item>
	</effects>
	<disableWhileDead>true</disableWhileDead>
</gameMechanics.constructor.schemes.ability.AbilityResource>
