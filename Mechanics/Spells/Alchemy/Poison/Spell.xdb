<?xml version="1.0" encoding="UTF-8" ?>
<gameMechanics.constructor.schemes.spell.singleTarget.SpellSingleTarget>
	<Header>
		<resourceId>59357</resourceId>
		<isPrototype>true</isPrototype>
	</Header>
	<groups>
		<Item href="/Mechanics/Spells/Groups/Poisons.xdb#xpointer(/gameMechanics.constructor.basicInterfaces.ActionGroup)" />
		<Item href="/Mechanics/Spells/Groups/PoisonConsumables.xdb#xpointer(/gameMechanics.constructor.basicInterfaces.ActionGroup)" />
	</groups>
	<image href="/Interface/Icons/Misc/Potions/PoisonBottle.(UISingleTexture).xdb#xpointer(/UISingleTexture)" />
	<visualScripts href="/Spells/VisScripts/RangedAttack/ThrowBottlePoison.(SpellVisScripts).xdb#xpointer(/SpellVisScripts)" />
	<nameTemplate href="Spell_Name.txt.template" />
	<descTemplate href="Spell_Desc.txt.template" />
	<speed>8</speed>
	<range type="gameMechanics.elements.calcers.FloatData">
		<value>20</value>
	</range>
	<level var="learnLevel" />
	<prepareDuration>0</prepareDuration>
	<immutablePrepareDuration>false</immutablePrepareDuration>
	<needLos>true</needLos>
	<element>POISON</element>
	<targetType>STTCurrentTarget</targetType>
	<isAggro>false</isAggro>
	<replaceLowRanks>true</replaceLowRanks>
	<isWorkOnDead>false</isWorkOnDead>
	<ranks>
		<Item href="Spell01.xdb#xpointer(/gameMechanics.constructor.schemes.spell.singleTarget.SpellSingleTarget)" />
		<Item href="Spell02.xdb#xpointer(/gameMechanics.constructor.schemes.spell.singleTarget.SpellSingleTarget)" />
		<Item href="Spell03.xdb#xpointer(/gameMechanics.constructor.schemes.spell.singleTarget.SpellSingleTarget)" />
		<Item href="Spell04.xdb#xpointer(/gameMechanics.constructor.schemes.spell.singleTarget.SpellSingleTarget)" />
	</ranks>
	<iffPolicy>Enemies</iffPolicy>
	<triggersGlobalCooldown>true</triggersGlobalCooldown>
	<ignoreGlobalCooldown>false</ignoreGlobalCooldown>
	<needInGroup>false</needInGroup>
	<launchWhenReady>false</launchWhenReady>
	<needInFront>true</needInFront>
	<mechanics type="gameMechanics.constructor.schemes.spell.SpellMechanics">
		<cooldown>
			<stage>Launch</stage>
			<duration>600000</duration>
			<group href="/Mechanics/Spells/Groups/PoisonConsumables.xdb#xpointer(/gameMechanics.constructor.basicInterfaces.ActionGroup)" />
		</cooldown>
		<casterResources>
			<Item type="gameMechanics.elements.resources.ResourceActiveItem">
				<number>1</number>
			</Item>
		</casterResources>
		<targetImpacts>
			<Item type="gameMechanics.elements.impacts.ImpactIfCaster">
				<predicates>
					<Item type="gameMechanics.elements.predicates.PredicateManaCaster">
						<manaType>Energy</manaType>
					</Item>
				</predicates>
				<impacts>
					<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
						<buff hrefvar="buff" />
						<allowOverrideCaster>false</allowOverrideCaster>
					</Item>
					<Item type="gameMechanics.elements.impacts.ScaledMagicDamage">
						<element>POISON</element>
						<threatMultiplier>0</threatMultiplier>
						<statsConvertor>
							<intuition type="gameMechanics.elements.calcers.InnateStatCalcer">
								<stat>IS_Dexterity</stat>
							</intuition>
							<spirit type="gameMechanics.elements.calcers.InnateStatCalcer">
								<stat>IS_Might</stat>
							</spirit>
						</statsConvertor>
						<minDamage var="minDamage" />
						<maxDamage var="maxDamage" />
						<scaler type="gameMechanics.elements.scalers.TrivialScaler" />
					</Item>
				</impacts>
				<elseImpacts>
					<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
						<buff hrefvar="buff" />
						<allowOverrideCaster>false</allowOverrideCaster>
					</Item>
					<Item type="gameMechanics.elements.impacts.ScaledMagicDamage">
						<element>POISON</element>
						<threatMultiplier>0</threatMultiplier>
						<minDamage var="minDamage" />
						<maxDamage var="maxDamage" />
						<scaler type="gameMechanics.elements.scalers.TrivialScaler" />
					</Item>
				</elseImpacts>
			</Item>
		</targetImpacts>
	</mechanics>
</gameMechanics.constructor.schemes.spell.singleTarget.SpellSingleTarget>
