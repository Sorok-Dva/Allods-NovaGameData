<?xml version="1.0" encoding="UTF-8" ?>
<constructor.elements.CalcerFloatResource>
	<Header>
		<resourceId>347889666</resourceId>
	</Header>
	<calcer type="gameMechanics.elements.calcers.CalcerIf">
		<predicate type="gameMechanics.constructor.basicElements.PredicateAnd">
			<predicates>
				<Item type="gameMechanics.map.variables.PredicateMapVariableGreater">
					<variableResource href="/Mechanics/MegaWar/Variables/DefendersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
					<minValue type="gameMechanics.elements.calcers.FloatData">
						<value>0</value>
					</minValue>
				</Item>
				<Item type="gameMechanics.map.variables.PredicateMapVariableGreater">
					<variableResource href="/Mechanics/MegaWar/Variables/AttackersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
					<minValue type="gameMechanics.elements.calcers.FloatData">
						<value>0</value>
					</minValue>
				</Item>
			</predicates>
		</predicate>
		<calcerIf type="gameMechanics.elements.calcers.CalcerIf">
			<predicate type="gameMechanics.elements.predicates.PredicateGreater">
				<lhs type="gameMechanics.elements.calcers.CalcerMul">
					<calcers>
						<Item type="gameMechanics.elements.calcers.InverseCalcer">
							<value type="gameMechanics.elements.calcers.CalcerIf">
								<predicate type="gameMechanics.battleground.map.PredicateBattleMemberMark">
									<mark href="/Maps/MW_Isle01/Marks/Blue.(BattlegroundPlayerSpawnPlace).xdb#xpointer(/gameMechanics.battleground.BattlegroundPlayerSpawnPlace)" />
								</predicate>
								<calcerIf type="gameMechanics.map.variables.MapVariableValueCalcer">
									<resource href="/Mechanics/MegaWar/Variables/AttackersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
								</calcerIf>
								<calcerElse type="gameMechanics.map.variables.MapVariableValueCalcer">
									<resource href="/Mechanics/MegaWar/Variables/DefendersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
								</calcerElse>
							</value>
						</Item>
						<Item type="gameMechanics.elements.calcers.CalcerIf">
							<predicate type="gameMechanics.battleground.map.PredicateBattleMemberMark">
								<mark href="/Maps/MW_Isle01/Marks/Blue.(BattlegroundPlayerSpawnPlace).xdb#xpointer(/gameMechanics.battleground.BattlegroundPlayerSpawnPlace)" />
							</predicate>
							<calcerIf type="gameMechanics.map.variables.MapVariableValueCalcer">
								<resource href="/Mechanics/MegaWar/Variables/DefendersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
							</calcerIf>
							<calcerElse type="gameMechanics.map.variables.MapVariableValueCalcer">
								<resource href="/Mechanics/MegaWar/Variables/AttackersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
							</calcerElse>
						</Item>
					</calcers>
				</lhs>
				<rhs type="gameMechanics.elements.calcers.FloatData">
					<value>2</value>
				</rhs>
			</predicate>
			<calcerIf type="gameMechanics.elements.calcers.FloatData">
				<value>10</value>
			</calcerIf>
			<calcerElse type="gameMechanics.elements.calcers.CalcerIf">
				<predicate type="gameMechanics.elements.predicates.PredicateGreater">
					<lhs type="gameMechanics.elements.calcers.FloatData">
						<value>1</value>
					</lhs>
					<rhs type="gameMechanics.elements.calcers.CalcerMul">
						<calcers>
							<Item type="gameMechanics.elements.calcers.InverseCalcer">
								<value type="gameMechanics.elements.calcers.CalcerIf">
									<predicate type="gameMechanics.battleground.map.PredicateBattleMemberMark">
										<mark href="/Maps/MW_Isle01/Marks/Blue.(BattlegroundPlayerSpawnPlace).xdb#xpointer(/gameMechanics.battleground.BattlegroundPlayerSpawnPlace)" />
									</predicate>
									<calcerIf type="gameMechanics.map.variables.MapVariableValueCalcer">
										<resource href="/Mechanics/MegaWar/Variables/AttackersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
									</calcerIf>
									<calcerElse type="gameMechanics.map.variables.MapVariableValueCalcer">
										<resource href="/Mechanics/MegaWar/Variables/DefendersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
									</calcerElse>
								</value>
							</Item>
							<Item type="gameMechanics.elements.calcers.CalcerIf">
								<predicate type="gameMechanics.battleground.map.PredicateBattleMemberMark">
									<mark href="/Maps/MW_Isle01/Marks/Blue.(BattlegroundPlayerSpawnPlace).xdb#xpointer(/gameMechanics.battleground.BattlegroundPlayerSpawnPlace)" />
								</predicate>
								<calcerIf type="gameMechanics.map.variables.MapVariableValueCalcer">
									<resource href="/Mechanics/MegaWar/Variables/DefendersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
								</calcerIf>
								<calcerElse type="gameMechanics.map.variables.MapVariableValueCalcer">
									<resource href="/Mechanics/MegaWar/Variables/AttackersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
								</calcerElse>
							</Item>
						</calcers>
					</rhs>
				</predicate>
				<calcerIf type="gameMechanics.elements.calcers.FloatData">
					<value>0</value>
				</calcerIf>
				<calcerElse type="gameMechanics.elements.calcers.CalcerMul">
					<calcers>
						<Item type="gameMechanics.elements.calcers.CalcerSum">
							<summands>
								<Item type="gameMechanics.elements.calcers.CalcerMul">
									<calcers>
										<Item type="gameMechanics.elements.calcers.InverseCalcer">
											<value type="gameMechanics.elements.calcers.CalcerIf">
												<predicate type="gameMechanics.battleground.map.PredicateBattleMemberMark">
													<mark href="/Maps/MW_Isle01/Marks/Blue.(BattlegroundPlayerSpawnPlace).xdb#xpointer(/gameMechanics.battleground.BattlegroundPlayerSpawnPlace)" />
												</predicate>
												<calcerIf type="gameMechanics.map.variables.MapVariableValueCalcer">
													<resource href="/Mechanics/MegaWar/Variables/AttackersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
												</calcerIf>
												<calcerElse type="gameMechanics.map.variables.MapVariableValueCalcer">
													<resource href="/Mechanics/MegaWar/Variables/DefendersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
												</calcerElse>
											</value>
										</Item>
										<Item type="gameMechanics.elements.calcers.CalcerIf">
											<predicate type="gameMechanics.battleground.map.PredicateBattleMemberMark">
												<mark href="/Maps/MW_Isle01/Marks/Blue.(BattlegroundPlayerSpawnPlace).xdb#xpointer(/gameMechanics.battleground.BattlegroundPlayerSpawnPlace)" />
											</predicate>
											<calcerIf type="gameMechanics.map.variables.MapVariableValueCalcer">
												<resource href="/Mechanics/MegaWar/Variables/DefendersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
											</calcerIf>
											<calcerElse type="gameMechanics.map.variables.MapVariableValueCalcer">
												<resource href="/Mechanics/MegaWar/Variables/AttackersResource.(MapVariableResource).xdb#xpointer(/gameMechanics.map.variables.MapVariableResource)" />
											</calcerElse>
										</Item>
									</calcers>
								</Item>
								<Item type="gameMechanics.elements.calcers.FloatData">
									<value>-1</value>
								</Item>
							</summands>
						</Item>
						<Item type="gameMechanics.elements.calcers.FloatData">
							<value>10</value>
						</Item>
					</calcers>
				</calcerElse>
			</calcerElse>
		</calcerIf>
		<calcerElse type="gameMechanics.elements.calcers.FloatData">
			<value>0</value>
		</calcerElse>
	</calcer>
</constructor.elements.CalcerFloatResource>
