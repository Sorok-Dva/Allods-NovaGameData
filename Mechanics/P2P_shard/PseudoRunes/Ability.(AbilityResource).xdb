<?xml version="1.0" encoding="UTF-8" ?>
<gameMechanics.constructor.schemes.ability.AbilityResource>
	<Header>
		<resourceId>357487617</resourceId>
	</Header>
	<isHidden>true</isHidden>
	<effects>
		<Item type="gameMechanics.elements.effects.ScalerAllOutputDamage">
			<scaler type="gameMechanics.elements.scalers.MultLinearEffectScaler">
				<coeff>1</coeff>
				<calcer type="gameMechanics.elements.calcers.CalcerIf">
					<predicate type="gameMechanics.elements.predicates.PredicateCreatureLevel">
						<minLevel type="gameMechanics.formulas.IntConstantValue">
							<value>51</value>
						</minLevel>
					</predicate>
					<calcerIf type="gameMechanics.elements.calcers.CalcerMul">
						<calcers>
							<Item type="constructor.elements.CalcerFloatExternal">
								<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
							</Item>
							<Item type="gameMechanics.elements.calcers.FloatData">
								<value>0.1</value>
							</Item>
						</calcers>
					</calcerIf>
					<calcerElse type="gameMechanics.elements.calcers.CalcerMul">
						<calcers>
							<Item type="gameMechanics.constructor.basicElements.ScalerCalcer">
								<scaler type="gameMechanics.elements.scalers.LevelScaler" />
								<value>1</value>
							</Item>
							<Item type="gameMechanics.elements.calcers.InverseCalcer">
								<value type="gameMechanics.elements.calcers.FloatData">
									<value>51</value>
								</value>
							</Item>
							<Item type="constructor.elements.CalcerFloatExternal">
								<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
							</Item>
							<Item type="gameMechanics.elements.calcers.FloatData">
								<value>0.1</value>
							</Item>
						</calcers>
					</calcerElse>
				</calcer>
			</scaler>
		</Item>
		<Item type="gameMechanics.elements.effects.OutgoingHealModifier">
			<scaler type="gameMechanics.elements.scalers.MultLinearEffectScaler">
				<coeff>1</coeff>
				<calcer type="gameMechanics.elements.calcers.CalcerIf">
					<predicate type="gameMechanics.elements.predicates.PredicateCreatureLevel">
						<minLevel type="gameMechanics.formulas.IntConstantValue">
							<value>51</value>
						</minLevel>
					</predicate>
					<calcerIf type="gameMechanics.elements.calcers.CalcerMul">
						<calcers>
							<Item type="constructor.elements.CalcerFloatExternal">
								<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
							</Item>
							<Item type="gameMechanics.elements.calcers.FloatData">
								<value>0.1</value>
							</Item>
						</calcers>
					</calcerIf>
					<calcerElse type="gameMechanics.elements.calcers.CalcerMul">
						<calcers>
							<Item type="gameMechanics.constructor.basicElements.ScalerCalcer">
								<scaler type="gameMechanics.elements.scalers.LevelScaler" />
								<value>1</value>
							</Item>
							<Item type="gameMechanics.elements.calcers.InverseCalcer">
								<value type="gameMechanics.elements.calcers.FloatData">
									<value>51</value>
								</value>
							</Item>
							<Item type="constructor.elements.CalcerFloatExternal">
								<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
							</Item>
							<Item type="gameMechanics.elements.calcers.FloatData">
								<value>0.1</value>
							</Item>
						</calcers>
					</calcerElse>
				</calcer>
			</scaler>
		</Item>
		<Item type="gameMechanics.elements.effects.ScalerAllInputDamage">
			<scaler type="gameMechanics.elements.scalers.MultLinearEffectScaler">
				<coeff>1</coeff>
				<calcer type="gameMechanics.elements.calcers.CalcerSum">
					<summands>
						<Item type="gameMechanics.elements.calcers.CalcerIf">
							<predicate type="gameMechanics.elements.predicates.PredicateCreatureLevel">
								<minLevel type="gameMechanics.formulas.IntConstantValue">
									<value>51</value>
								</minLevel>
							</predicate>
							<calcerIf type="gameMechanics.elements.calcers.CalcerMul">
								<calcers>
									<Item type="gameMechanics.elements.calcers.FloatData">
										<value>1</value>
									</Item>
									<Item type="gameMechanics.elements.calcers.InverseCalcer">
										<value type="gameMechanics.elements.calcers.CalcerSum">
											<summands>
												<Item type="gameMechanics.elements.calcers.FloatData">
													<value>1</value>
												</Item>
												<Item type="gameMechanics.elements.calcers.CalcerMul">
													<calcers>
														<Item type="gameMechanics.elements.calcers.InverseCalcer">
															<value type="gameMechanics.elements.calcers.FloatData">
																<value>10</value>
															</value>
														</Item>
														<Item type="constructor.elements.CalcerFloatExternal">
															<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
														</Item>
													</calcers>
												</Item>
											</summands>
										</value>
									</Item>
								</calcers>
							</calcerIf>
							<calcerElse type="gameMechanics.elements.calcers.CalcerMul">
								<calcers>
									<Item type="gameMechanics.elements.calcers.FloatData">
										<value>1</value>
									</Item>
									<Item type="gameMechanics.elements.calcers.InverseCalcer">
										<value type="gameMechanics.elements.calcers.CalcerSum">
											<summands>
												<Item type="gameMechanics.elements.calcers.FloatData">
													<value>1</value>
												</Item>
												<Item type="gameMechanics.elements.calcers.CalcerMul">
													<calcers>
														<Item type="gameMechanics.elements.calcers.InverseCalcer">
															<value type="gameMechanics.elements.calcers.FloatData">
																<value>10</value>
															</value>
														</Item>
														<Item type="gameMechanics.elements.calcers.CalcerMul">
															<calcers>
																<Item type="gameMechanics.constructor.basicElements.ScalerCalcer">
																	<scaler type="gameMechanics.elements.scalers.LevelScaler" />
																	<value>1</value>
																</Item>
																<Item type="gameMechanics.elements.calcers.InverseCalcer">
																	<value type="gameMechanics.elements.calcers.FloatData">
																		<value>51</value>
																	</value>
																</Item>
																<Item type="constructor.elements.CalcerFloatExternal">
																	<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
																</Item>
															</calcers>
														</Item>
													</calcers>
												</Item>
											</summands>
										</value>
									</Item>
								</calcers>
							</calcerElse>
						</Item>
						<Item type="gameMechanics.elements.calcers.FloatData">
							<value>-1</value>
						</Item>
					</summands>
				</calcer>
			</scaler>
		</Item>
		<Item type="gameMechanics.elements.effects.EffectLinearStatModifier">
			<stat type="gameMechanics.elements.stat.StatAttackRuneLevel" />
			<multiplier>0</multiplier>
			<summand>1</summand>
			<scaler type="gameMechanics.elements.scalers.LinerMultiplierScaler">
				<mulCalcer type="gameMechanics.elements.calcers.CalcerIf">
					<predicate type="gameMechanics.elements.predicates.PredicateCreatureLevel">
						<minLevel type="gameMechanics.formulas.IntConstantValue">
							<value>51</value>
						</minLevel>
					</predicate>
					<calcerIf type="constructor.elements.CalcerFloatExternal">
						<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
					</calcerIf>
					<calcerElse type="gameMechanics.elements.calcers.CalcerMul">
						<calcers>
							<Item type="gameMechanics.constructor.basicElements.ScalerCalcer">
								<scaler type="gameMechanics.elements.scalers.LevelScaler" />
								<value>1</value>
							</Item>
							<Item type="gameMechanics.elements.calcers.InverseCalcer">
								<value type="gameMechanics.elements.calcers.FloatData">
									<value>51</value>
								</value>
							</Item>
							<Item type="constructor.elements.CalcerFloatExternal">
								<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
							</Item>
						</calcers>
					</calcerElse>
				</mulCalcer>
			</scaler>
		</Item>
		<Item type="gameMechanics.elements.effects.EffectsToPet">
			<effects>
				<Item type="gameMechanics.elements.effects.ScalerAllOutputDamage">
					<scaler type="gameMechanics.elements.scalers.MultLinearEffectScaler">
						<coeff>1</coeff>
						<calcer type="gameMechanics.elements.calcers.CalcerIf">
							<predicate type="gameMechanics.elements.predicates.PredicateCreatureLevel">
								<minLevel type="gameMechanics.formulas.IntConstantValue">
									<value>51</value>
								</minLevel>
							</predicate>
							<calcerIf type="gameMechanics.elements.calcers.CalcerMul">
								<calcers>
									<Item type="constructor.elements.CalcerFloatExternal">
										<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
									</Item>
									<Item type="gameMechanics.elements.calcers.FloatData">
										<value>0.1</value>
									</Item>
								</calcers>
							</calcerIf>
							<calcerElse type="gameMechanics.elements.calcers.CalcerMul">
								<calcers>
									<Item type="gameMechanics.constructor.basicElements.ScalerCalcer">
										<scaler type="gameMechanics.elements.scalers.LevelScaler" />
										<value>1</value>
									</Item>
									<Item type="gameMechanics.elements.calcers.InverseCalcer">
										<value type="gameMechanics.elements.calcers.FloatData">
											<value>51</value>
										</value>
									</Item>
									<Item type="constructor.elements.CalcerFloatExternal">
										<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
									</Item>
									<Item type="gameMechanics.elements.calcers.FloatData">
										<value>0.1</value>
									</Item>
								</calcers>
							</calcerElse>
						</calcer>
					</scaler>
				</Item>
				<Item type="gameMechanics.elements.effects.OutgoingHealModifier">
					<scaler type="gameMechanics.elements.scalers.MultLinearEffectScaler">
						<coeff>1</coeff>
						<calcer type="gameMechanics.elements.calcers.CalcerIf">
							<predicate type="gameMechanics.elements.predicates.PredicateCreatureLevel">
								<minLevel type="gameMechanics.formulas.IntConstantValue">
									<value>51</value>
								</minLevel>
							</predicate>
							<calcerIf type="gameMechanics.elements.calcers.CalcerMul">
								<calcers>
									<Item type="constructor.elements.CalcerFloatExternal">
										<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
									</Item>
									<Item type="gameMechanics.elements.calcers.FloatData">
										<value>0.1</value>
									</Item>
								</calcers>
							</calcerIf>
							<calcerElse type="gameMechanics.elements.calcers.CalcerMul">
								<calcers>
									<Item type="gameMechanics.constructor.basicElements.ScalerCalcer">
										<scaler type="gameMechanics.elements.scalers.LevelScaler" />
										<value>1</value>
									</Item>
									<Item type="gameMechanics.elements.calcers.InverseCalcer">
										<value type="gameMechanics.elements.calcers.FloatData">
											<value>51</value>
										</value>
									</Item>
									<Item type="constructor.elements.CalcerFloatExternal">
										<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
									</Item>
									<Item type="gameMechanics.elements.calcers.FloatData">
										<value>0.1</value>
									</Item>
								</calcers>
							</calcerElse>
						</calcer>
					</scaler>
				</Item>
				<Item type="gameMechanics.elements.effects.ScalerAllInputDamage">
					<scaler type="gameMechanics.elements.scalers.MultLinearEffectScaler">
						<coeff>1</coeff>
						<calcer type="gameMechanics.elements.calcers.CalcerSum">
							<summands>
								<Item type="gameMechanics.elements.calcers.CalcerIf">
									<predicate type="gameMechanics.elements.predicates.PredicateCreatureLevel">
										<minLevel type="gameMechanics.formulas.IntConstantValue">
											<value>51</value>
										</minLevel>
									</predicate>
									<calcerIf type="gameMechanics.elements.calcers.CalcerMul">
										<calcers>
											<Item type="gameMechanics.elements.calcers.FloatData">
												<value>1</value>
											</Item>
											<Item type="gameMechanics.elements.calcers.InverseCalcer">
												<value type="gameMechanics.elements.calcers.CalcerSum">
													<summands>
														<Item type="gameMechanics.elements.calcers.FloatData">
															<value>1</value>
														</Item>
														<Item type="gameMechanics.elements.calcers.CalcerMul">
															<calcers>
																<Item type="gameMechanics.elements.calcers.InverseCalcer">
																	<value type="gameMechanics.elements.calcers.FloatData">
																		<value>10</value>
																	</value>
																</Item>
																<Item type="constructor.elements.CalcerFloatExternal">
																	<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
																</Item>
															</calcers>
														</Item>
													</summands>
												</value>
											</Item>
										</calcers>
									</calcerIf>
									<calcerElse type="gameMechanics.elements.calcers.CalcerMul">
										<calcers>
											<Item type="gameMechanics.elements.calcers.FloatData">
												<value>1</value>
											</Item>
											<Item type="gameMechanics.elements.calcers.InverseCalcer">
												<value type="gameMechanics.elements.calcers.CalcerSum">
													<summands>
														<Item type="gameMechanics.elements.calcers.FloatData">
															<value>1</value>
														</Item>
														<Item type="gameMechanics.elements.calcers.CalcerMul">
															<calcers>
																<Item type="gameMechanics.elements.calcers.InverseCalcer">
																	<value type="gameMechanics.elements.calcers.FloatData">
																		<value>10</value>
																	</value>
																</Item>
																<Item type="gameMechanics.elements.calcers.CalcerMul">
																	<calcers>
																		<Item type="gameMechanics.constructor.basicElements.ScalerCalcer">
																			<scaler type="gameMechanics.elements.scalers.LevelScaler" />
																			<value>1</value>
																		</Item>
																		<Item type="gameMechanics.elements.calcers.InverseCalcer">
																			<value type="gameMechanics.elements.calcers.FloatData">
																				<value>51</value>
																			</value>
																		</Item>
																		<Item type="constructor.elements.CalcerFloatExternal">
																			<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
																		</Item>
																	</calcers>
																</Item>
															</calcers>
														</Item>
													</summands>
												</value>
											</Item>
										</calcers>
									</calcerElse>
								</Item>
								<Item type="gameMechanics.elements.calcers.FloatData">
									<value>-1</value>
								</Item>
							</summands>
						</calcer>
					</scaler>
				</Item>
				<Item type="gameMechanics.elements.effects.EffectLinearStatModifier">
					<stat type="gameMechanics.elements.stat.StatAttackRuneLevel" />
					<summand>1</summand>
					<scaler type="gameMechanics.elements.scalers.LinerMultiplierScaler">
						<mulCalcer type="gameMechanics.elements.calcers.CalcerIf">
							<predicate type="gameMechanics.elements.predicates.PredicateCreatureLevel">
								<minLevel type="gameMechanics.formulas.IntConstantValue">
									<value>51</value>
								</minLevel>
							</predicate>
							<calcerIf type="constructor.elements.CalcerFloatExternal">
								<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
							</calcerIf>
							<calcerElse type="gameMechanics.elements.calcers.CalcerMul">
								<calcers>
									<Item type="gameMechanics.constructor.basicElements.ScalerCalcer">
										<scaler type="gameMechanics.elements.scalers.LevelScaler" />
										<value>1</value>
									</Item>
									<Item type="gameMechanics.elements.calcers.InverseCalcer">
										<value type="gameMechanics.elements.calcers.FloatData">
											<value>51</value>
										</value>
									</Item>
									<Item type="constructor.elements.CalcerFloatExternal">
										<externalCalcer href="RunesLevel.(CalcerFloatResource).xdb#xpointer(/constructor.elements.CalcerFloatResource)" />
									</Item>
								</calcers>
							</calcerElse>
						</mulCalcer>
					</scaler>
				</Item>
			</effects>
		</Item>
	</effects>
</gameMechanics.constructor.schemes.ability.AbilityResource>
