<?xml version="1.0" encoding="UTF-8" ?>
<gameMechanics.constructor.schemes.ability.AbilityResource>
	<Header>
		<resourceId>235846682</resourceId>
		<isPrototype>true</isPrototype>
	</Header>
	<image href="/Interface/Icons/Equipment/Plate/CuirassKnight.(UISingleTexture).xdb#xpointer(/UISingleTexture)" />
	<nameTemplate href="Ability_Name.txt.template" />
	<descTemplate href="Ability_Desc.txt.template" />
	<effects>
		<Item type="gameMechanics.elements.effects.EffectDamageTrigger">
			<impacts>
				<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
					<predicates>
						<Item type="gameMechanics.elements.resources.ResourceBuff">
							<buff href="Buff01.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
							<anyRank>true</anyRank>
							<consumeStacks>0</consumeStacks>
						</Item>
					</predicates>
					<impactsElse>
						<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
							<buff hrefvar="buff" />
							<allowOverrideCaster>false</allowOverrideCaster>
						</Item>
					</impactsElse>
				</Item>
			</impacts>
			<scaleImpactsByDamage>false</scaleImpactsByDamage>
			<damageType>ToBarrier</damageType>
			<predicates>
				<Item type="gameMechanics.elements.predicates.damageProperties.PredicateIsForthright" />
				<Item type="gameMechanics.elements.predicates.damageProperties.PredicateNot">
					<predicate type="gameMechanics.elements.predicates.damageProperties.PredicateIsAE" />
				</Item>
				<Item type="gameMechanics.elements.predicates.damageProperties.PredicateIsCrit" />
			</predicates>
		</Item>
	</effects>
	<majorEffect>-1</majorEffect>
	<level>1</level>
	<ranks>
		<Item href="Ability01.xdb#xpointer(/gameMechanics.constructor.schemes.ability.AbilityResource)" />
		<Item href="Ability02.xdb#xpointer(/gameMechanics.constructor.schemes.ability.AbilityResource)" />
		<Item href="Ability03.xdb#xpointer(/gameMechanics.constructor.schemes.ability.AbilityResource)" />
	</ranks>
	<disableWhileDead>false</disableWhileDead>
	<saveState>false</saveState>
</gameMechanics.constructor.schemes.ability.AbilityResource>
