<?xml version="1.0" encoding="UTF-8" ?>
<gameMechanics.constructor.schemes.ability.AbilityResource>
	<Header>
		<resourceId>237496331</resourceId>
	</Header>
	<name href="AbilityName.txt" />
	<effects>
		<Item type="gameMechanics.elements.effects.DeathTrigger">
			<impacts>
				<Item type="gameMechanics.elements.impacts.ImpactCreaturesAround">
					<radius>10</radius>
					<affectGroup>Friends</affectGroup>
					<affectHolder>false</affectHolder>
					<impacts>
						<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
							<predicates>
								<Item type="gameMechanics.constructor.basicElements.PredicateAnd">
									<predicates>
										<Item type="gameMechanics.elements.predicates.PredicateMobWorld">
											<mobs>
												<Item href="/Creatures/ZombieMage/Instances/AstralIsle17/AstralZombiePack.(MobWorld).xdb#xpointer(/gameMechanics.world.mob.MobWorld)" />
											</mobs>
										</Item>
										<Item type="gameMechanics.elements.predicates.PredicateIsAlive" />
									</predicates>
								</Item>
							</predicates>
							<impactsIf>
								<Item type="gameMechanics.elements.impacts.ImpactClientDataParams">
									<distributor type="gameMechanics.elements.calcers.ObjectsAroundDistributor" />
									<data href="HitOnTarget.(ClientData).xdb#xpointer(/gameMechanics.world.ClientData)" />
								</Item>
								<Item type="gameMechanics.constructor.schemes.buff.StackBuff">
									<buff href="ZombiePower.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									<delta type="gameMechanics.elements.calcers.FloatData">
										<value>1</value>
									</delta>
									<attachIfNotExist>true</attachIfNotExist>
								</Item>
								<Item type="gameMechanics.elements.impacts.ImpactHeal">
									<heal>500</heal>
									<scaler type="gameMechanics.elements.scalers.MagicScaler" />
								</Item>
								<Item type="gameMechanics.elements.impacts.ImpactHeal">
									<heal>500</heal>
									<scaler type="gameMechanics.elements.scalers.MagicScaler" />
								</Item>
								<Item type="gameMechanics.elements.impacts.ImpactHeal">
									<heal>500</heal>
									<scaler type="gameMechanics.elements.scalers.MagicScaler" />
								</Item>
							</impactsIf>
						</Item>
					</impacts>
					<filter type="gameMechanics.world.creature.MobFilter" />
				</Item>
				<Item type="gameMechanics.elements.impacts.ImpactClientDataParams">
					<distributor type="gameMechanics.elements.calcers.ObjectsAroundDistributor" />
					<data href="HitPoisonEffect.(ClientData).xdb#xpointer(/gameMechanics.world.ClientData)" />
				</Item>
				<Item type="gameMechanics.elements.impacts.ImpactCreaturesAround">
					<radius>10</radius>
					<affectGroup>Enemies</affectGroup>
					<affectHolder>false</affectHolder>
					<impacts>
						<Item type="gameMechanics.elements.impacts.ScaledMagicDamage">
							<element>ACID</element>
							<minDamage>25</minDamage>
							<maxDamage>25</maxDamage>
							<scaler type="gameMechanics.elements.scalers.MagicScaler" />
						</Item>
						<Item type="gameMechanics.elements.impacts.ImpactClientDataParams">
							<distributor type="gameMechanics.elements.calcers.ObjectsAroundDistributor" />
							<data href="HitOnTarget.(ClientData).xdb#xpointer(/gameMechanics.world.ClientData)" />
						</Item>
					</impacts>
					<filter type="gameMechanics.constructor.basicElements.FilterOr">
						<filters>
							<Item type="gameMechanics.world.creature.AvatarFilter" />
							<Item type="gameMechanics.constructor.basicElements.FilterPredicates">
								<predicates>
									<Item type="gameMechanics.elements.resources.ResourceBuff">
										<buff href="/Mechanics/Spells/Mercenaries/Controls/MercUnderControl.(BuffResource).xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
									</Item>
								</predicates>
							</Item>
						</filters>
					</filter>
				</Item>
			</impacts>
		</Item>
	</effects>
</gameMechanics.constructor.schemes.ability.AbilityResource>
