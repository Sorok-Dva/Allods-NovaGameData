<?xml version="1.0" encoding="UTF-8" ?>
<gameMechanics.constructor.schemes.buff.BuffResource>
	<Header>
		<resourceId>107105290</resourceId>
		<isPrototype>true</isPrototype>
	</Header>
	<Name href="Buff.Name.txt" />
	<Description href="Buff.Desc.txt" />
	<image href="/Interface/Icons/Misc/Junk/PvPDivineFavor.(UISingleTexture).xdb#xpointer(/UISingleTexture)" />
	<visScript href="/Spells/BuffVisScripts/PvpDivineFavor.(BuffVisScripts).xdb#xpointer(/BuffVisScripts)" />
	<effects>
		<Item type="gameMechanics.elements.effects.EffectDictatePvp" />
		<Item type="gameMechanics.elements.effects.EffectForcePvp" />
		<Item type="gameMechanics.elements.effects.ScalerOutDmgTargetDependent">
			<scaler type="gameMechanics.elements.scalers.ScalerIf">
				<condition type="gameMechanics.elements.predicates.PredicateIsAvatar" />
				<scalerIf type="gameMechanics.elements.scalers.LinearScaler">
					<multiplier>1.1</multiplier>
				</scalerIf>
			</scaler>
		</Item>
		<Item type="gameMechanics.elements.effects.EffectOnKillEnemyAvatar">
			<impacts>
				<Item type="gameMechanics.elements.impacts.ImpactClientDataParams">
					<distributor type="gameMechanics.elements.calcers.ZoneDistributor">
						<faction type="gameMechanics.elements.calcers.ZoneDistributor$AnyFaction" />
					</distributor>
					<data href="OnKillMsg.ClientData.xdb#xpointer(/gameMechanics.world.ClientData)" />
					<calcers>
						<stringEntries>
							<Item>
								<name>killer</name>
								<calcer type="gameMechanics.elements.calcers.CasterNameCalcer" />
							</Item>
							<Item>
								<name>victim</name>
								<calcer type="gameMechanics.elements.calcers.TargetNameCalcer" />
							</Item>
						</stringEntries>
					</calcers>
				</Item>
			</impacts>
		</Item>
		<Item type="gameMechanics.elements.effects.DeathTrigger">
			<killerImpacts>
				<Item type="gameMechanics.elements.impacts.ImpactsIf">
					<predicate type="gameMechanics.constructor.basicElements.BinaryPredicateNot">
						<predicate type="gameMechanics.elements.predicates.PredicateNotMaster" />
					</predicate>
					<impactsIf>
						<Item type="gameMechanics.elements.impacts.ImpactClientDataParams">
							<distributor type="gameMechanics.elements.calcers.ZoneDistributor">
								<faction type="gameMechanics.elements.calcers.ZoneDistributor$AnyFaction" />
							</distributor>
							<data href="OnDeathBySelfMsg.ClientData.xdb#xpointer(/gameMechanics.world.ClientData)" />
							<calcers>
								<stringEntries>
									<Item>
										<name>victim</name>
										<calcer type="gameMechanics.elements.calcers.TargetNameCalcer" />
									</Item>
								</stringEntries>
							</calcers>
						</Item>
					</impactsIf>
					<impactsElse>
						<Item type="gameMechanics.elements.impacts.ImpactIfCaster">
							<predicates>
								<Item type="gameMechanics.elements.predicates.PredicateIsAvatar" />
							</predicates>
							<impacts>
								<Item type="gameMechanics.elements.impacts.ImpactClientDataParams">
									<distributor type="gameMechanics.elements.calcers.ZoneDistributor">
										<faction type="gameMechanics.elements.calcers.ZoneDistributor$AnyFaction" />
									</distributor>
									<data href="OnDeathMsg.ClientData.xdb#xpointer(/gameMechanics.world.ClientData)" />
									<calcers>
										<stringEntries>
											<Item>
												<name>killer</name>
												<calcer type="gameMechanics.elements.calcers.CasterNameCalcer" />
											</Item>
											<Item>
												<name>victim</name>
												<calcer type="gameMechanics.elements.calcers.TargetNameCalcer" />
											</Item>
										</stringEntries>
									</calcers>
								</Item>
							</impacts>
							<elseImpacts>
								<Item type="gameMechanics.elements.impacts.ImpactClientDataParams">
									<distributor type="gameMechanics.elements.calcers.ZoneDistributor">
										<faction type="gameMechanics.elements.calcers.ZoneDistributor$AnyFaction" />
									</distributor>
									<data href="OnDeathByMobMsg.ClientData.xdb#xpointer(/gameMechanics.world.ClientData)" />
									<calcers>
										<stringEntries>
											<Item>
												<name>victim</name>
												<calcer type="gameMechanics.elements.calcers.TargetNameCalcer" />
											</Item>
										</stringEntries>
									</calcers>
								</Item>
							</elseImpacts>
						</Item>
					</impactsElse>
				</Item>
			</killerImpacts>
			<skipSelfKill>false</skipSelfKill>
		</Item>
		<Item type="gameMechanics.elements.effects.EffectZoneEnterLeaveChecker">
			<impactsOnEnter>
				<Item type="gameMechanics.elements.impacts.BuffDetacher">
					<buff href="LeaveZoneBuff.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
					<anyRank>false</anyRank>
				</Item>
			</impactsOnEnter>
			<impactsOnLeave>
				<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
					<buff href="LeaveZoneBuff.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
				</Item>
			</impactsOnLeave>
			<impactsOnTimeout>
				<Item type="gameMechanics.elements.impacts.BuffDetacher">
					<buff hrefvar="self_buff" />
					<anyRank>false</anyRank>
				</Item>
			</impactsOnTimeout>
			<timeout>20000</timeout>
			<activeZone hrefvar="active_zone" />
		</Item>
		<Item type="gameMechanics.elements.effects.EffectsIfTarget">
			<predicates>
				<Item type="gameMechanics.elements.predicates.PredicateFaction">
					<faction href="/World/Factions/League.xdb#xpointer(/gameMechanics.world.creature.Faction)" />
				</Item>
			</predicates>
			<effectsIf>
				<Item type="gameMechanics.elements.effects.EffectInZoneTracker">
					<buff hrefvar="self_buff" />
					<activeZone hrefvar="active_zone" />
					<trackData href="TrackDataLeague.(TrackDataResource).xdb#xpointer(/gameMechanics.world.avatar.TrackDataResource)" />
				</Item>
			</effectsIf>
			<effectsElse>
				<Item type="gameMechanics.elements.effects.EffectsIfTarget">
					<predicates>
						<Item type="gameMechanics.elements.predicates.PredicateFaction">
							<faction href="/World/Factions/Empire.xdb#xpointer(/gameMechanics.world.creature.Faction)" />
						</Item>
					</predicates>
					<effectsIf>
						<Item type="gameMechanics.elements.effects.EffectInZoneTracker">
							<buff hrefvar="self_buff" />
							<activeZone hrefvar="active_zone" />
							<trackData href="TrackDataEmpire.(TrackDataResource).xdb#xpointer(/gameMechanics.world.avatar.TrackDataResource)" />
						</Item>
					</effectsIf>
				</Item>
			</effectsElse>
		</Item>
		<Item type="gameMechanics.elements.effects.EffectTriggerZonePvpType">
			<effectsOff>
				<Item type="gameMechanics.elements.effects.TickableAura">
					<affectGroup>Friends</affectGroup>
					<radius>30</radius>
					<filter type="gameMechanics.world.creature.AvatarFilter" />
					<impactsIn>
						<Item type="gameMechanics.elements.impacts.ImpactIfTarget">
							<predicates>
								<Item type="gameMechanics.elements.predicates.PredicateHasBuffFromGroup">
									<groups>
										<Item href="PvPDivineFavorGroup.xdb#xpointer(/gameMechanics.constructor.basicInterfaces.ActionGroup)" />
									</groups>
								</Item>
							</predicates>
							<impactsElse>
								<Item type="gameMechanics.constructor.schemes.buff.BuffAttacher">
									<buff href="AuraBuff.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
								</Item>
							</impactsElse>
						</Item>
					</impactsIn>
					<impactsOut>
						<Item type="gameMechanics.elements.impacts.BuffDetacher">
							<buff href="AuraBuff.xdb#xpointer(/gameMechanics.constructor.schemes.buff.BuffResource)" />
							<anyRank>false</anyRank>
						</Item>
					</impactsOut>
				</Item>
			</effectsOff>
			<zonePvpTypes>
				<Item href="/Mechanics/ZonePvpTypes/Sanctuary.xdb#xpointer(/gameMechanics.map.zone.Sanctuary)" />
				<Item href="/Mechanics/ZonePvpTypes/GraveyardEmpire.xdb#xpointer(/gameMechanics.map.zone.Graveyard)" />
				<Item href="/Mechanics/ZonePvpTypes/GraveyardLeague.xdb#xpointer(/gameMechanics.map.zone.Graveyard)" />
			</zonePvpTypes>
		</Item>
		<Item type="gameMechanics.elements.effects.EffectExperienceOutgoingModifier">
			<factor type="gameMechanics.elements.calcers.FloatData">
				<value>3</value>
			</factor>
		</Item>
		<Item type="gameMechanics.elements.effects.EffectExperienceGrowthModifier">
			<addPart>0.5</addPart>
			<slice href="/Mechanics/Slices/PvPExperienceSlice.xdb#xpointer(/gameMechanics.world.avatar.development.ExperienceSlice)" />
		</Item>
	</effects>
	<duration>3600000</duration>
	<isStackable>false</isStackable>
	<isHelpful>true</isHelpful>
	<groups>
		<Item href="PvPDivineFavorGroup.xdb#xpointer(/gameMechanics.constructor.basicInterfaces.ActionGroup)" />
	</groups>
</gameMechanics.constructor.schemes.buff.BuffResource>
